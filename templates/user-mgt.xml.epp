<%- | String $adm_user, 
      String $adm_pwd,
      String $adm_role, 
      Boolean $use_active_directory = false,
      Boolean $use_ccm = false,
      String $ad_server,
      String $ad_port,
      Boolean $ad_use_ssl = true,
      String $ad_service_user,
      String $ad_service_pwd,
      String $ad_user_search_base,
      String $ad_group_search_base,
      String $ad_user_name_search_filter = '(&amp;(objectClass=user)(sAMAccountName=?))',
      String $ad_user_name_list_filter = '(&amp;(objectClass=user)(!(sn=Service)))',
      String $ad_group_name_search_filter = '(&amp;(objectClass=group)(cn=?))',
      String $ad_group_name_list_filter = '(objectcategory=group)',
      String $pwd_java_regex = '[a-zA-Z0-9._\-|//]{3,30}$',
      String $pwd_java_script_regex = '^[\S]{5,30}$',
      String $pwd_violation_msg = 'Password length should be within 5 to 30 characters',
| -%>
<!--
  ~ 
  ~  This file is manged by puppet DO NOT edit it by hand. 
  ~
  -->

<UserManager>
    <Realm>
        <Configuration>
            <% if $use_active_directory == true { -%>
            <AddAdmin>false</AddAdmin>
            <% } else { -%>
            <AddAdmin>true</AddAdmin>
            <% } -%>
            <AdminRole><%= $adm_role -%></AdminRole>
            <AdminUser>
                <UserName><%= $adm_user -%></UserName>
                <Password><%= $adm_pwd -%></Password>
            </AdminUser>
            <EveryOneRoleName>everyone</EveryOneRoleName> <!-- By default users in this role sees the registry root -->
            !-- Enable username claim retrieve from the UM_USER_NAME in JDBC datasources -->
            <OverrideUsernameClaimFromInternalUsername>true</OverrideUsernameClaimFromInternalUsername>
            <Property name="isCascadeDeleteEnabled">true</Property>
 <Property name="initializeNewClaimManager">true</Property>
            <Property name="dataSource">jdbc/WSO2CarbonDB</Property>
        </Configuration>


<% if $use_active_directory == true { -%>
            <!-- Active directory configuration is as follows.
                 In case if user core cache domain is needed to identify uniquely set property
                 <Property name="UserCoreCacheIdentifier">domain</Property>
                 There are few special properties for "Active Directory".
                 They are :
                 1.Referral - (comment out this property if this feature is not reuired) This enables LDAP referral support.
                 2.BackLinksEnabled - (Do not comment, set to true or false) In some cases LDAP works with BackLinksEnabled.
                 In which role is stored at user level. Depending on this value we need to change the Search Base within code.
                 isADLDSRole - (Do not comment) Set to true if connecting to an AD LDS instance else set to false.
            -->
        <UserStoreManager class="org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreManager">
            <Property name="TenantManager">org.wso2.carbon.user.core.tenant.CommonHybridLDAPTenantManager</Property>
            <% if $ad_use_ssl == true { -%>
            <Property name="ConnectionURL">ldaps://<%= $ad_server -%>:<%= $ad_port -%></Property> 
            <% } else { -%>
            <Property name="ConnectionURL">ldap://<%= $ad_server -%>:<%= $ad_port -%></Property> 
            <% } -%>
            <Property name="ConnectionName"><%= $ad_service_user -%></Property>
            <% if $use_ccm == false { -%>
            <Property name="ConnectionPassword"><%= $ad_service_pwd -%></Property>
            <% } else { -%>
            <Property name="ConnectionPassword"><%%= credential[0] %%></Property>
            <% } -%>
            <Property name="AnonymousBind">false</Property>
            <Property name="UserSearchBase"><%= $ad_user_search_base -%></Property>
            <Property name="UserEntryObjectClass">user</Property>
            <Property name="UserNameAttribute">sAMAccountName</Property>
            <Property name="UserNameSearchFilter"><%= $ad_user_name_search_filter -%></Property>
            <Property name="UserNameListFilter"><%= $ad_user_name_list_filter -%></Property>
            <Property name="DisplayNameAttribute"/>
            <Property name="ReadGroups">true</Property>
            <Property name="WriteGroups">true</Property>
            <Property name="GroupSearchBase"><%= $ad_group_search_base -%></Property>
            <Property name="GroupEntryObjectClass">group</Property>
            <Property name="GroupNameAttribute">cn</Property>
            <Property name="GroupNameSearchFilter"><%= $ad_group_name_search_filter -%></Property>
            <Property name="GroupNameListFilter"><%= $ad_group_name_list_filter -%></Property>
            <Property name="MembershipAttribute">member</Property>
            <Property name="MemberOfAttribute">memberOf</Property>
            <Property name="BackLinksEnabled">true</Property>
            <Property name="Referral">follow</Property>
            <Property name="UsernameJavaRegEx">[a-zA-Z0-9._\-|//]{3,30}$</Property>
            <Property name="UsernameJavaScriptRegEx">^[\S]{3,30}$</Property>
            <Property name="UsernameJavaRegExViolationErrorMsg">Username pattern policy violated</Property>
            <Property name="PasswordJavaRegEx"><%= $pwd_java_regex -%></Property>
            <Property name="PasswordJavaScriptRegEx"><%= $pwd_java_script_regex -%></Property>
            <Property name="PasswordJavaRegExViolationErrorMsg"><%= $pwd_violation_msg -%></Property>
            <Property name="RolenameJavaRegEx">[a-zA-Z0-9._\-|//]{3,30}$</Property>
            <Property name="RolenameJavaScriptRegEx">^[\S]{3,30}$</Property>
            <Property name="SCIMEnabled">false</Property>
            <Property name="IsBulkImportSupported">false</Property>
            <Property name="EmptyRolesAllowed">true</Property>
            <Property name="PasswordHashMethod">PLAIN_TEXT</Property>
            <Property name="MultiAttributeSeparator">,</Property>
            <Property name="isADLDSRole">false</Property>
            <Property name="userAccountControl">512</Property>
            <Property name="MaxUserNameListLength">100</Property>     
            <Property name="MaxRoleNameListLength">100</Property>                     
            <Property name="MembershipAttributeRange">1500</Property>
            <Property name="kdcEnabled">false</Property>
            <Property name="defaultRealmName">WSO2.ORG</Property>
            <Property name="UserRolesCacheEnabled">true</Property>
            <Property name="ConnectionPoolingEnabled">false</Property>
            <Property name="LDAPConnectionTimeout">5000</Property>
            <Property name="ReadTimeout"/>
            <Property name="RetryAttempts"/>
            <Property name="StartTLSEnabled">false</Property>
        </UserStoreManager>
<% } -%>
     

        <AuthorizationManager class="org.wso2.carbon.user.core.authorization.JDBCAuthorizationManager">
            <Property name="AdminRoleManagementPermissions">/permission</Property>
            <Property name="AuthorizationCacheEnabled">true</Property>
            <% if $use_active_directory == true { -%>
            <Property name="GetAllRolesOfUserEnabled">true</Property>
            <% } else { -%>
            <Property name="GetAllRolesOfUserEnabled">false</Property>
            <% } -%>
        </AuthorizationManager>
    </Realm>
</UserManager>
